///
/// @Generated by Mockolo
///



import Foundation
import Moya
import PKHUD
import RxCocoa
import RxSwift
import UIKit
import Unio


class APIClientProtocolMock: APIClientProtocol {
    init() { }


    private(set) var sendCallCount = 0
    var sendHandler: ((MoyaProvider<MultiTarget>, Any) -> (Any))?
    func send<Request: BaseTargetType>(provider: MoyaProvider<MultiTarget>, _ request: Request) -> Single<APIResult<Request.Response, Request.ErrorResponse>> {
        sendCallCount += 1
        if let sendHandler = sendHandler {
            return sendHandler(provider, request) as! Single<APIResult<Request.Response, Request.ErrorResponse>>
        }
        fatalError("sendHandler returns can't have a default value thus its handler must be set")
    }
}

class SearchRepositoryTypeMock: SearchRepositoryType {
    init() { }


    private(set) var populateRepositoriesCallCount = 0
    var populateRepositoriesHandler: ((String, String?, Int?) -> (Single<[RepositoryInfoModel]>))?
    func populateRepositories(query: String, language: String?, pagingOffset: Int?) -> Single<[RepositoryInfoModel]> {
        populateRepositoriesCallCount += 1
        if let populateRepositoriesHandler = populateRepositoriesHandler {
            return populateRepositoriesHandler(query, language, pagingOffset)
        }
        fatalError("populateRepositoriesHandler returns can't have a default value thus its handler must be set")
    }
//
//    private(set) var populateCardViewCallCount = 0
//    var populateCardViewHandler: (([RepositoryInfoModel]) -> ([CardView]))?
//    func populateCardView(items: [RepositoryInfoModel]) -> [CardView] {
//        populateRepositoriesCallCount += 1
//        if let populateCardViewHandler = populateCardViewHandler {
//            return populateCardViewHandler(items)
//        }
//        fatalError("populateCardViewHandler returns can't have a default value thus its handler must be set")
//    }
}

